[{"/Users/lwoo/quickstart/react_quickstart/src/App.tsx":"1","/Users/lwoo/quickstart/react_quickstart/src/reportWebVitals.ts":"2","/Users/lwoo/quickstart/react_quickstart/src/index.tsx":"3","/Users/lwoo/quickstart/react_quickstart/src/Components/Table/Table.tsx":"4","/Users/lwoo/quickstart/react_quickstart/src/Components/Products/Product.tsx":"5","/Users/lwoo/quickstart/react_quickstart/src/Components/Products/Products.tsx":"6","/Users/lwoo/quickstart/react_quickstart/src/Utilities/productUtilities.ts":"7","/Users/lwoo/quickstart/react_quickstart/src/Components/Items/Items.tsx":"8","/Users/lwoo/quickstart/react_quickstart/src/Components/Link/LinkButton.tsx":"9","/Users/lwoo/quickstart/react_quickstart/src/Components/Headers/HeaderStart.tsx":"10","/Users/lwoo/quickstart/react_quickstart/src/Components/Error/Error.tsx":"11"},{"size":1078,"mtime":1610848514309,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1610395657220,"results":"14","hashOfConfig":"13"},{"size":520,"mtime":1610744178610,"results":"15","hashOfConfig":"13"},{"size":2001,"mtime":1610754303551,"results":"16","hashOfConfig":"13"},{"size":2334,"mtime":1610755603522,"results":"17","hashOfConfig":"13"},{"size":2913,"mtime":1610754297692,"results":"18","hashOfConfig":"13"},{"size":8218,"mtime":1610848361142,"results":"19","hashOfConfig":"13"},{"size":1116,"mtime":1610744889854,"results":"20","hashOfConfig":"13"},{"size":1546,"mtime":1610849299068,"results":"21","hashOfConfig":"13"},{"size":2476,"mtime":1610729170247,"results":"22","hashOfConfig":"13"},{"size":2453,"mtime":1610754314771,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n2l6ne",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49"},"/Users/lwoo/quickstart/react_quickstart/src/App.tsx",[],"/Users/lwoo/quickstart/react_quickstart/src/reportWebVitals.ts",[],"/Users/lwoo/quickstart/react_quickstart/src/index.tsx",["50"],"/Users/lwoo/quickstart/react_quickstart/src/Components/Table/Table.tsx",["51"],"/Users/lwoo/quickstart/react_quickstart/src/Components/Products/Product.tsx",["52","53"],"import React, { useEffect, useState } from \"react\";\nimport Button from \"plaid-threads/Button\";\nimport Note from \"plaid-threads/Note\";\n\nimport Table from \"../Table/Table\";\nimport Error from \"../Error/Error\";\n\nimport { DataItem, Categories } from \"../../Utilities/productUtilities\";\n\nimport styles from \"./Product.module.scss\";\n\ninterface Props {\n  product: string;\n  name?: string | null;\n  categories: Array<Categories>;\n  schema: string;\n  description: string;\n  transformData?: (arg: any) => Array<DataItem>;\n}\n\ninterface Error {\n  error_type?: string;\n  error_code?: string;\n  error_message?: string;\n  display_message?: string | null;\n}\n\ntype Data = Array<DataItem>;\n\nconst Product = (props: Props) => {\n  const [showTable, setShowTable] = useState(false);\n  const [transformedData, setTransformedData] = useState<Data>([]);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState<Error>({});\n\n  const getData = async () => {\n    const response = await fetch(`/api/${props.product}`, { method: \"GET\" });\n    const data = await response.json();\n    if (data.error != null) {\n      setError(data.error);\n      setIsError(true);\n    } else {\n      setTransformedData(props.transformData!(data));\n      setShowTable(true);\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.productContainer}>\n        <Note info className={styles.post}>\n          POST\n        </Note>\n        <div className={styles.productContents}>\n          <div className={styles.productHeader}>\n            {props.name && (\n              <span className={styles.productName}>{props.name}</span>\n            )}\n            <span className={styles.schema}>{props.schema}</span>\n          </div>\n          <div className={styles.productDescription}>{props.description}</div>\n        </div>\n        <Button\n          type=\"button\"\n          small\n          wide\n          secondary\n          className={styles.sendRequest}\n          onClick={getData}\n        >\n          {\" \"}\n          Send Request\n        </Button>\n      </div>\n      {showTable && (\n        <Table\n          categories={props.categories}\n          data={transformedData}\n          identity={props.product === \"identity\"}\n        />\n      )}\n      {isError && <Error error={error} />}\n    </>\n  );\n};\n\nProduct.displayName = \"Product\";\n\nexport default Product;\n","/Users/lwoo/quickstart/react_quickstart/src/Components/Products/Products.tsx",["54","55","56","57","58"],"/Users/lwoo/quickstart/react_quickstart/src/Utilities/productUtilities.ts",["59","60","61","62","63","64","65"],"/Users/lwoo/quickstart/react_quickstart/src/Components/Items/Items.tsx",["66","67"],"import React, { useEffect, useState } from \"react\";\n\nimport Product from \"../Products/Product\";\nimport {\n  transformItemData,\n  transformAccountsData,\n} from \"../../Utilities/productUtilities\";\nimport {\n  itemCategories,\n  accountsCategories,\n} from \"../../Utilities/productUtilities\";\n\nimport styles from \"./Items.module.scss\";\n\nconst Items = () => (\n  <>\n    <div className={styles.itemsContainer}>\n      <div className={styles.itemsHeader}>Item Management</div>\n      <Product\n        product=\"item\"\n        categories={itemCategories}\n        schema=\"/item/get/\"\n        description=\"Retrieve information about an Item, like the institution,\n        billed products, available products, and webhook\n        information.\"\n        transformData={transformItemData}\n      />\n\n      <Product\n        product=\"accounts\"\n        schema=\"/accounts/get\"\n        categories={accountsCategories}\n        description=\"Retrieve high-level information about all accounts associated with an item.\"\n        transformData={transformAccountsData}\n      />\n    </div>\n  </>\n);\n\nItems.displayName = \"Items\";\n\nexport default Items;\n","/Users/lwoo/quickstart/react_quickstart/src/Components/Link/LinkButton.tsx",["68","69","70","71","72","73"],"/Users/lwoo/quickstart/react_quickstart/src/Components/Headers/HeaderStart.tsx",["74","75"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport cx from \"classnames\";\n\nimport LinkButton from \"../Link/LinkButton\";\n\nimport styles from \"./HeaderStart.module.scss\";\n\ninterface Props {\n  linkToken: string | null;\n  linkSuccess: boolean;\n  setLinkSuccess: (arg: boolean) => void;\n}\nconst HeaderStart = (props: Props) => {\n  const [itemId, setItemId] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n\n  return (\n    <div className={styles.grid}>\n      {\" \"}\n      <h1 className={styles.title}>Plaid Quickstart</h1>\n      {!props.linkSuccess && (\n        <>\n          <h2 className={styles.subtitle}>\n            A sample end-to-end integration with Plaid\n          </h2>\n          <p className={styles.introPar}>\n            The Plaid flow begins when your user wants to connect their bank\n            account to your app. Simulate this by clicking the button below to\n            launch Link - the client-side component that your users will\n            interact with in order to link their accounts to Plaid and allow you\n            to access their accounts via the Plaid API.\n          </p>\n          <div className={styles.linkButton}>\n            {props.linkToken != null && !props.linkSuccess && (\n              <LinkButton\n                setLinkSuccess={props.setLinkSuccess}\n                linkToken={props.linkToken}\n                setItemId={setItemId}\n                setAccessToken={setAccessToken}\n              />\n            )}\n          </div>\n        </>\n      )}\n      {props.linkSuccess && (\n        <>\n          <h2 className={styles.subtitle}>\n            Congrats! By linking an account, you have created an{\" \"}\n            <span className={styles.itemText}>Item</span>.\n          </h2>\n          <div className={styles.itemAccessIds}>\n            <p className={styles.id}>\n              <span className={styles.idText}>item_id</span>\n              <span className={styles.tokenText}>{itemId}</span>\n            </p>\n\n            <p className={styles.id}>\n              <span className={styles.idText}>asccess_token</span>\n              <span className={styles.tokenText}>{accessToken}</span>\n            </p>\n          </div>\n          <p className={styles.requests}>\n            Now that you have an access token, you can make all of the following\n            requests:\n          </p>\n        </>\n      )}\n    </div>\n  );\n};\n\nHeaderStart.displayName = \"HeaderStart\";\n\nexport default HeaderStart;\n","/Users/lwoo/quickstart/react_quickstart/src/Components/Error/Error.tsx",["76","77","78"],"import React, { useEffect, useState } from \"react\";\nimport Button from \"plaid-threads/Button\";\nimport Note from \"plaid-threads/Note\";\n\nimport {\n  DataItem as DataItem,\n  Categories,\n} from \"../../Utilities/productUtilities\";\n\nimport styles from \"./Error.module.scss\";\ninterface Props {\n  error: Errors | DataItem;\n}\ninterface Errors {\n  error_type: string;\n  error_code: string;\n  error_message: string;\n  display_message: string | null;\n  status_code: number;\n}\n\nconst errorPaths: { [key: string]: string } = {\n  ITEM_ERROR: \"item\",\n  INSTITUTION_ERROR: \"institution\",\n  API_ERROR: \"api\",\n  ASSET_REPORT_ERROR: \"assets\",\n  BANK_TRANSFER_ERROR: \"bank-transfers\",\n  INVALID_INPUT: \"invalid-input\",\n  INVALID_REQUEST: \"invalid-request\",\n  INVALID_RESULT: \"invalid-result\",\n  OAUTH_ERROR: \"oauth\",\n  PAYMENT_ERROR: \"payment\",\n  RATE_LIMIT_EXCEEDED: \"rate-limit-exceeded\",\n  RECAPTCHA_ERROR: \"recaptcha\",\n  SANDBOX_ERROR: \"sandbox\",\n};\n\nconst Error = (props: Props) => {\n  const [path, setPath] = useState(\"\");\n\n  useEffect(() => {\n    const errorType = props.error.error_type!;\n    const errorPath = errorPaths[errorType];\n\n    setPath(\n      `https://plaid.com/docs/errors/${errorPath}/#${props.error.error_code?.toLowerCase()}`\n    );\n  }, []);\n\n  return (\n    <>\n      <div className={styles.errorTop}></div>\n      <div className={styles.errorContainer}>\n        <Note error className={styles.code}>\n          {props.error.status_code}\n        </Note>\n        <div className={styles.errorContents}>\n          <div className={styles.errorItem}>\n            <span className={styles.errorTitle}>Error code: </span>\n            <span className={styles.errorData}>{props.error.error_code}</span>\n          </div>\n          <div className={styles.errorItem}>\n            <span className={styles.errorTitle}>Type: </span>\n            <span className={styles.errorData}>{props.error.error_type}</span>\n          </div>\n          <div className={styles.errorItem}>\n            <span className={styles.errorTitle}>Message: </span>\n            <span className={styles.errorData}>\n              {props.error.display_message == null\n                ? props.error.error_message\n                : props.error.display_message}\n            </span>\n          </div>\n        </div>\n        <Button small wide className={styles.learnMore} href={path}>\n          Learn More\n        </Button>\n      </div>\n    </>\n  );\n};\n\nError.displayName = \"Error\";\n\nexport default Error;\n",{"ruleId":"79","severity":1,"message":"80","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"84","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":21,"column":11,"nodeType":"81","messageId":"87","endLine":21,"endColumn":16},{"ruleId":"79","severity":1,"message":"84","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"88","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"89","line":18,"column":3,"nodeType":"81","messageId":"82","endLine":18,"endColumn":20},{"ruleId":"79","severity":1,"message":"90","line":20,"column":3,"nodeType":"81","messageId":"82","endLine":20,"endColumn":24},{"ruleId":"79","severity":1,"message":"91","line":29,"column":11,"nodeType":"81","messageId":"82","endLine":29,"endColumn":25},{"ruleId":"79","severity":1,"message":"92","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"84","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"88","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"93","line":13,"column":7,"nodeType":"81","messageId":"82","endLine":13,"endColumn":16},{"ruleId":"79","severity":1,"message":"94","line":291,"column":9,"nodeType":"81","messageId":"82","endLine":291,"endColumn":31},{"ruleId":"79","severity":1,"message":"94","line":316,"column":9,"nodeType":"81","messageId":"82","endLine":316,"endColumn":31},{"ruleId":"79","severity":1,"message":"94","line":376,"column":9,"nodeType":"81","messageId":"82","endLine":376,"endColumn":31},{"ruleId":"79","severity":1,"message":"84","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"88","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"88","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"95","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":10},{"ruleId":"79","severity":1,"message":"96","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":37,"column":6,"nodeType":"99","endLine":37,"endColumn":8,"suggestions":"100"},{"ruleId":"79","severity":1,"message":"101","line":47,"column":24,"nodeType":"81","messageId":"82","endLine":47,"endColumn":29},{"ruleId":"79","severity":1,"message":"83","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"95","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":10},{"ruleId":"102","severity":1,"message":"103","line":6,"column":3,"nodeType":"104","messageId":"105","endLine":6,"endColumn":23,"fix":"106"},{"ruleId":"79","severity":1,"message":"107","line":7,"column":3,"nodeType":"81","messageId":"82","endLine":7,"endColumn":13},{"ruleId":"97","severity":1,"message":"108","line":48,"column":6,"nodeType":"99","endLine":48,"endColumn":8,"suggestions":"109"},"@typescript-eslint/no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'useEffect' is defined but never used.","@typescript-eslint/no-redeclare","'Error' is already defined.","redeclared","'useState' is defined but never used.","'transformItemData' is defined but never used.","'transformAccountsData' is defined but never used.","'ProdCategories' is defined but never used.","'React' is defined but never used.","'formatter' is assigned a value but never used.","'final' is assigned a value but never used.","'cx' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside React.useCallback.","ArrayExpression",["110"],"'error' is assigned a value but never used.","no-useless-rename","Import DataItem unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"111","text":"112"},"'Categories' is defined but never used.","React Hook useEffect has missing dependencies: 'props.error.error_code' and 'props.error.error_type'. Either include them or remove the dependency array. If 'setPath' needs the current value of 'props.error.error_code', you can also switch to useReducer instead of useState and read 'props.error.error_code' in the reducer.",["113"],{"desc":"114","fix":"115"},[146,166],"DataItem",{"desc":"116","fix":"117"},"Update the dependencies array to be: [props]",{"range":"118","text":"119"},"Update the dependencies array to be: [props.error.error_code, props.error.error_type]",{"range":"120","text":"121"},[1032,1034],"[props]",[1239,1241],"[props.error.error_code, props.error.error_type]"]